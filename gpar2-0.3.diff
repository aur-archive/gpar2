diff -rupN gpar2-0.3/gpar2.cc gpar2-0.3.new/gpar2.cc
--- gpar2-0.3/gpar2.cc	2006-02-25 16:05:26.000000000 +0100
+++ gpar2-0.3.new/gpar2.cc	2011-12-27 23:57:16.933191444 +0100
@@ -1,5 +1,5 @@
 #include "gpar2.h"
-
+#include <libintl.h> 
 
 int main(int argc, char *argv[])
 {
diff -rupN gpar2-0.3/gpar2.desktop gpar2-0.3.new/gpar2.desktop
--- gpar2-0.3/gpar2.desktop	2006-02-27 19:19:41.000000000 +0100
+++ gpar2-0.3.new/gpar2.desktop	2011-12-27 23:57:16.936524776 +0100
@@ -2,11 +2,11 @@
 Name=GPar2
 Comment=GUI for Parity Volumes
 Comment[fr]=Gestionnaire de volumes de paritÃ©
-Icon=gnome-main-menu
+Icon=gpar2
 Exec=gpar2 %f
 Terminal=false
-MimeType=application/x-par;application/x-par2
+MimeType=application/x-par;application/x-par2;
 Type=Application
-Categories=Application;Utility;
-Encoding=UTF-8
+Categories=System;Filesystem;
+Version=1.0
 StartupNotify=true
diff -rupN gpar2-0.3/mainwindow.cc gpar2-0.3.new/mainwindow.cc
--- gpar2-0.3/mainwindow.cc	2006-02-26 18:20:22.000000000 +0100
+++ gpar2-0.3.new/mainwindow.cc	2011-12-27 23:57:00.406524464 +0100
@@ -20,7 +20,7 @@ MainWindow::MainWindow(char* text)
   nbdone = 0.0;
   set_title("GPar2 " + version);
   set_resizable(false);
-  set_icon_from_file("/usr/share/pixmaps/gnome-logo-icon-transparent.png");
+  set_icon_from_file("/usr/share/pixmaps/gpar2.png");
   set_size_request(600, 350);
   add(main_VBox);
   file_loaded = false;
@@ -167,7 +167,7 @@ MainWindow::MainWindow(char* text)
   globalProgress.set_text(" ");
   //progressBar.set_fraction(0.5);
   //progressBar.set_text("Coucou");
-  //progressBar.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+  //progressBar.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
 
 
   // Files done
@@ -280,7 +280,7 @@ void MainWindow::preprocess()
   bool res = commandline->Parse(3, argv);
   if (res == false) {
     status_label.set_text("Error !");
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
   }
   else {
     // Repair damaged files
@@ -467,42 +467,42 @@ void MainWindow::update_status(Result re
  switch (result) {
   case eSuccess:
     status_label.set_text(_("Complete"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("green"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("green"));
     status = complete;
     break;
   case eRepairPossible:
     status_label.set_text(_("Repair possible"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("blue"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("blue"));
     status = repairable;
     break;
   case eRepairNotPossible:
     status_label.set_text(_("Repair not possible"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
     status = unrepairable;
     break;
   case eInsufficientCriticalData:
     status_label.set_text(_("Insufficient critical data"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
     status = unrepairable;
     break;
   case eRepairFailed:
     status_label.set_text(_("Repair failed"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
     status = unrepairable;
     break;
   case eFileIOError:
     status_label.set_text(_("I/O error"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
     status = unrepairable;
     break;
   case eLogicError:
     status_label.set_text(_("Internal error"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
     status = unrepairable;
     break;
  case eMemoryError:
    status_label.set_text(_("Out of memory"));
-   status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color::Color("red"));
+   status_frame.modify_bg(Gtk::STATE_NORMAL,Gdk::Color("red"));
    status = unrepairable;
    break;
  default:
@@ -519,7 +519,7 @@ void MainWindow::errors(Error error)
 			      Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK, false);
     dialog.set_secondary_text(_("A recovery set must be loaded before it can be repaired.  Please check that a set has been loaded and try this request again."));
     status_label.set_text(_("Repair Failed"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL, Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL, Gdk::Color("red"));
     dialog.run();
     status_label.set_text("");
     status_frame.unset_bg(Gtk::STATE_NORMAL);
@@ -530,7 +530,7 @@ void MainWindow::errors(Error error)
 			      Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK, false);
     dialog.set_secondary_text(_("A recovery set must be loaded before verification.  Please check that a set has been loaded and try this request again."));
     status_label.set_text(_("Verification Failed"));
-    status_frame.modify_bg(Gtk::STATE_NORMAL, Gdk::Color::Color("red"));
+    status_frame.modify_bg(Gtk::STATE_NORMAL, Gdk::Color("red"));
     dialog.run();
     status_label.set_text("");
     status_frame.unset_bg(Gtk::STATE_NORMAL);
diff -rupN gpar2-0.3/Makefile.am gpar2-0.3.new/Makefile.am
--- gpar2-0.3/Makefile.am	2006-02-26 22:39:13.000000000 +0100
+++ gpar2-0.3.new/Makefile.am	2011-12-27 23:58:53.946526604 +0100
@@ -25,7 +25,7 @@ bin_PROGRAMS = gpar2
 gpar2_SOURCES = gpar2.cc gpar2.h \
 	mainwindow.cc mainwindow.h
 
-AM_LDFLAGS = -lstdc++ -lsigc-2.0 `pkg-config gtkmm-2.4 --libs` -lpar2
+AM_LDFLAGS = -lstdc++ -lsigc-2.0 `pkg-config gtkmm-2.4 --libs` -lpar2 -ldl
 INCLUDES = `pkg-config sigc++-2.0 gtkmm-2.4 --cflags`
 AM_CXXFLAGS = -DLOCALEDIR='"$(prefix)/share/locale"'
 
diff -rupN gpar2-0.3/Makefile.in gpar2-0.3.new/Makefile.in
--- gpar2-0.3/Makefile.in	2006-02-26 22:40:37.000000000 +0100
+++ gpar2-0.3.new/Makefile.in	2011-12-27 23:59:26.576527219 +0100
@@ -187,7 +187,7 @@ target_alias = @target_alias@
 gpar2_SOURCES = gpar2.cc gpar2.h \
 	mainwindow.cc mainwindow.h
 
-AM_LDFLAGS = -lstdc++ -lsigc-2.0 `pkg-config gtkmm-2.4 --libs` -lpar2
+AM_LDFLAGS = -lstdc++ -lsigc-2.0 `pkg-config gtkmm-2.4 --libs` -lpar2 -ldl
 INCLUDES = `pkg-config sigc++-2.0 gtkmm-2.4 --cflags`
 AM_CXXFLAGS = -DLOCALEDIR='"$(prefix)/share/locale"'
 EXTRA_DIST = config.rpath gnome-logo-icon-transparent.png gpar2.xml \
@@ -631,6 +631,8 @@ info: info-recursive
 info-am:
 
 install-data-am:
+	$(INSTALL_DATA) -D gnome-logo-icon-transparent.png $(DESTDIR)$(datadir)/pixmaps/gpar2.png
+	$(INSTALL_DATA) -D gpar2.desktop $(DESTDIR)$(datadir)/applications/gpar2.desktop
 
 install-exec-am: install-binPROGRAMS
 
